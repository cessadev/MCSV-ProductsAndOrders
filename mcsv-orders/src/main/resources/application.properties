spring.application.name=mcsv-orders
server.port=0

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5434/mcsv_orders
spring.datasource.username=cessadev
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update

# Eureka Client
eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#Actuator
management.endpoints.web.exposure.include=health
management.endpoints.web.base-path=/actuator/orders
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

# Resilience4j configuration
resilience4j.circuitbreaker.instances.inventoryService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventoryService.slidingWindowSize=100
resilience4j.circuitbreaker.instances.inventoryService.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.inventoryService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventoryService.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.inventoryService.permittedNumberOfCallsInHalfOpenState=10
resilience4j.circuitbreaker.instances.inventoryService.automaticTransitionFromOpenToHalfOpenEnabled=true

# Keycloak
spring.security.oauth2.resourceserver.jwt.jwt-set-uri=http://localhost:8181/realms/microservicios-realm/protocol/openid-connect/certs

#Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.retries=1
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer